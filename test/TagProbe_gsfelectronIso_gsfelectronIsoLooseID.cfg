process Demo =  {
  
   // keep the logging output to a nice level
   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.destinations = {cout,cerr}

   source = PoolSource 
   {
      untracked vstring fileNames = {
         "file:output/CSA08_electron_tp_edm_ntuple_cmssw207_gsfelectronIso_gsfelectronIsoLooseID.root"
      }
   }

   untracked PSet maxEvents = {untracked int32 input = -1}

   module demo = TagProbeEDMAnalysis { 

      // Make some plots of tree variables ...
      untracked vstring quantities      = {"TPmass","TPmass","MC23mass"}
      untracked vstring conditions      = {"1","TPppass==1","1"}   
     untracked vstring outputFileNames = {"Zmass.eps","Zmass_pass.eps","MCZmass.eps"}

      // Binning for the plots ...
      untracked vuint32 XBins           = {100,100,100}
      untracked vdouble XMin            = {50.0,50.0,50.0}
      untracked vdouble XMax            = {120.0,120.0,120.0}
      untracked vuint32 logY            = {1,1,1,0}
    
      // Efficiency/Fitting variables
      untracked bool CalculateEffSideBand = true // Calculate and store effs using SB
      untracked bool CalculateEffFitter   = false // Calculate and store effs from Roofit
      untracked bool CalculateEffTruth    = true // Calculate and store true effs

      // Root file to eff histograms to
     untracked string FitFileName = "electron_eff_CSA08_gsfelectronIso_gsfelectronIsoLooseID.root"




      // Variable Specifications for SB subtractions and Roofit

      // Choose binned or unbinned fitter ...
      // Note that the unbinned fit will not fit weighted data,
      // if you wish to use weights, use the binned fit.
      untracked bool UnbinnedFit          =     true
      untracked bool Do2DFit              =     true

      // Mass window for fitting
      untracked int32 NumBinsMass         = 60
      untracked double MassLow            = 60.0
      untracked double MassHigh           = 120.0



      // Variables and binning for the eff hists
      // Valid variables names for the eff binning are:
      // "pt","p","px","py","pz","e","et","eta" and "phi"
      // This way of declaring the bin will overide any other
      // If omitted the defaults are var1 = pt and var2 = eta

     // untracked string NameVar1             = "pt"
     // untracked vdouble Var1BinBoundaries   = {0.0, 30.0, 35.0, 40.0, 45.0, 50.0, 55.0, 60.0, 70.0,80.0, 90.0, 100.0}


      untracked string NameVar1             = "phi"
      untracked int32 NumBinsVar1          = 10
      untracked double Var1Low             = -3.14
      untracked double Var1High            =  3.14


      untracked string NameVar2            = "eta"
      untracked int32 NumBinsVar2          = 10
      untracked double Var2Low             = -2.5
      untracked double Var2High            =  2.5
      //untracked vdouble Var2BinBoundaries   = {-2.5,2.5}




      // Fitter variables - for the Roofit fitter
      // If you want the variable to float in the fit fill
      // three array elements {default, range_low, range_high}
      // If the variable should be fixed, fill one element {value}
      // Signal variables
      untracked vdouble SignalMean        = {91.1876,90.0,92.0}
      untracked vdouble SignalWidth       = {2.8,1.0,4.0}
      untracked vdouble SignalSigma       = {1.1,0.5,4.0}
      untracked vdouble SignalWidthL      = {3.0,0.0,20.0}
      untracked vdouble SignalWidthR      = {0.52,0.0,10.0}

      untracked vdouble BifurGaussFrac    = {0.87}

      // Background variables
      untracked vdouble BkgAlpha           = {62.0,50,70}
      untracked vdouble BkgBeta            = {0.001,0.0,0.1}
      untracked vdouble BkgPeak            = {91.1876}
      untracked vdouble BkgGamma           = {0.05,0.0,0.1}

      // Efficiency variables
      untracked vdouble Efficiency        = {0.9,0.0,1.0}    
      untracked vdouble NumSignal         = {4000.0,0.0,100000.0}    
      untracked vdouble NumBkgPass        = {1000.0,0.0,10000.0}    
      untracked vdouble NumBkgFail        = {10.0,0.0,10000.0}    

      // Variables for sideband subtraction
      untracked double SBSPeak            = 91.1876   // Mass peak
      untracked double SBSStanDev         = 2         // SD from peak for subtraction

   }

path p = {demo} 

}
