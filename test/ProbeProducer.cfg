process testB = {

    source = PoolSource 
    { 
     # replace 'myfile.root' with the source file you want to use
	untracked vstring fileNames = {
'/store/mc/2007/12/11/RelVal-RelValZMM-1197413334/0002/0ADB0DCF-C5A8-DC11-949A-000423D6648E.root'
	} 
    }
    
    untracked PSet maxEvents = {untracked int32 input = 5 }
    
#keep the logging output to a nice level
    service = MessageLogger {
	untracked vstring destinations   = { "cout" }
	untracked vstring categories = {"MatchStudy","ProbeProducer","ProbeCounter"}
	untracked vstring debugModules = {"demo","freeTrackerMuons","freeStandAloneMuons","matchedMuons","histsZtt2","staTkMatcher","tkStaMatcher"}
	untracked PSet cout = {
            untracked string threshold = "DEBUG"
            untracked bool noLineBreaks = true
            untracked bool noTimeStamps = true
            untracked PSet preEventProcessing = { untracked int32 limit = 0 }
            untracked PSet FwkReport = { untracked int32 limit = -1 }
            untracked PSet FwkJob    = { untracked int32 limit = 0 }
            untracked PSet default   = { untracked int32 limit = 0 }
            untracked PSet MatchStudy = { untracked int32 limit = -1}
            untracked PSet ProbeProducer = { untracked int32 limit = -1}
            untracked PSet ProbeCounter = { untracked int32 limit = -1}
	}
    }
    
    
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    
    module preGlbMuons = MuonSelector {
	InputTag src = muons
	string cut = "isGlobalMuon > 0 & pt > 30.0" // & combinedMuon.normalizedChi2 < 5.0"
    }

    module preGlbCands = MuonCloneProducer {
	InputTag src = preGlbMuons
    }

    module preStaMuons = MuonSelector {
	InputTag src = muons
	string cut = "isGlobalMuon = 0 & isStandAloneMuon > 0 & pt > 10.0"
    }

    module preStaCands = MuonCloneProducer {
	InputTag src = preStaMuons
    }

    module preTkMuons = MuonSelector {
	InputTag src = muons
	string cut = "isGlobalMuon = 0 & isTrackerMuon > 0 & pt > 15.0" // & track.recHitSize >= 7"
    }

    module preTkCands = MuonCloneProducer {
	InputTag src = preTkMuons
    }

    
    module glbL3Map = TrivialDeltaRMatcher  {
	InputTag src =  preGlbCands
	InputTag matched = hltL3Cands
	double distMin = 0.3
    } 

    module staTkMap = TrivialDeltaRMatcher  {
	InputTag src =  preStaCands
	InputTag matched = preTkCands
	double distMin = 0.3
    } 
    
    module tkStaMap = TrivialDeltaRMatcher  {
	InputTag src =  preTkCands
	InputTag matched = preStaCands
	double distMin = 0.3
    } 

    module staTkMatcher = MatchedProbeMaker { 
	untracked InputTag CandidateSource   = preStaCands
	untracked InputTag ResMatchMapSource = staTkMap
	untracked InputTag ReferenceSource   = preTkCands
    }

    module tkStaMatcher = MatchedProbeMaker { 
	untracked InputTag CandidateSource   = preTkCands
	untracked InputTag ResMatchMapSource = tkStaMap
	untracked InputTag ReferenceSource   = preStaCands
    }

    module ZCand = CandCombiner {
	string decay = "preGlbCands@+ preGlbCands@-"
	string cut = " 10. < mass < 160. "
    }

    module ZaaCand = CandCombiner {
	string decay = "preGlbCands@+ preStaCands@-"
	string cut = " 10. < mass < 160. "
    }

    module unmatchedTk = MuonCloneProducer {
	InputTag src = tkStaMatcher:unmatched
    }

    module matchedTk = MuonCloneProducer {
	InputTag src = tkStaMatcher:matched
    }

    module unmatchedSta = MuonCloneProducer {
	InputTag src = staTkMatcher:unmatched
    }

    module ZabCand = CandCombiner {
	string decay = "preGlbCands@+ unmatchedTk@-"
	string cut = " 10. < mass < 160. "
    }

    module ZacCand = CandCombiner {
	string decay = "preGlbCands@+ unmatchedSta@-"
	string cut = " 10. < mass < 160. "
    }

    module ZadCand = CandCombiner {
	string decay = "preGlbCands@+ matchedTk@-"
	string cut = " 10. < mass < 160. "
    }

    module ZtpCand = CandCombiner {
	string decay = "globalTags@+ globalProbes@-"
	string cut = " 10. < mass < 160. "
    }

    module out = PoolOutputModule {
	untracked string fileName = "test.root"
	untracked vstring outputCommands = {
	    "drop *_*_*_*",
	    "keep *_*_*_testB",
	    "keep recoMuons_*_*_*",
	    "keep *_ctfWithMaterialTracks_*_*",
	    "keep *_standAloneMuons_*_*",
	    "keep *_globalMuons_*_*",
	    "keep *_muons_*_*"
	}
    }

    include "PhysicsTools/RecoCandAlgos/data/allTracks.cfi"
    include "PhysicsTools/RecoCandAlgos/data/allMuons.cfi"
    
    path p1 = { preGlbMuons  & preStaMuons & preTkMuons , preGlbCands & preStaCands & preTkCands , staTkMap & tkStaMap , staTkMatcher & tkStaMatcher , ZCand & ZaaCand & ZabCand & ZacCand & ZadCand }

#    include "Analyzer/DiMuonAnalyzer/data/MuonTagAndProbe.cfi"
#    include "Analyzer/DiMuonAnalyzer/data/TrackCalIsolations.cff"
#    replace muonTagAndProbe.OutputFile = "tnp.root"
#    replace muonTagAndProbe.L3MuonCollection = globalMuons
#    replace muonTagAndProbe.binPt = 50
#    replace muonTagAndProbe.minEta = -2.5
#    replace muonTagAndProbe.maxEta = 2.5
#    replace muonTagAndProbe.binEta = 50

#    sequence iso = { GlbTrackCalIsolation, StaTrackCalIsolation, TrkTrackCalIsolation }
#    path pTag = {  muonTagAndProbe }
    
    schedule = { p1 , the_end  }

    endpath the_end = {out}
    
}
