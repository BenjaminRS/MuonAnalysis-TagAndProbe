process MuonEff = {

    source = PoolSource 
    { 
      untracked vstring fileNames = {
         "file:/uscms/home/neadam/scratch/tmp/input_zmumu_205_1.root"
      } 
    }
    replace PoolSource.fileNames = {
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/1E0800FF-FF14-DD11-A7F4-001617E30F56.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/3E8AC949-0315-DD11-96B0-001D09F28EA3.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/74E51786-0015-DD11-BBEC-0030487A1FEC.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/8C9E8165-FF14-DD11-AD20-001D09F23A61.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/90573CC7-0215-DD11-871E-001D09F28F1B.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/92EFBD03-0015-DD11-9F85-000423D6CA72.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/A02D78AC-0015-DD11-86CF-001D09F25442.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/AC9737FF-FF14-DD11-A2EF-001D09F241D2.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/B8677260-0015-DD11-AF5A-001D09F26509.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/D08A7FE5-0015-DD11-8F70-001D09F231C9.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/D632D132-FF14-DD11-9CB2-000423D99B3E.root',
       '/store/relval/2008/4/28/RelVal-RelValZMM-1209251027-STARTUP_V2-2nd/0001/F4DD91EE-FF14-DD11-980A-001D09F25393.root'
    }
    
    untracked PSet maxEvents = {untracked int32 input = -1 }
    
    // keep the logging output to a nice level
    service = MessageLogger {
	untracked vstring destinations   = { "cout","cerr" }
    }
    
    
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

    module TPEdm = TagProbeEDMNtuple
    {
       // Type of tag-probe candidates, use "Muon" or "Electron"
       // For the moment this only affects the kind of particle
       // used for storing MC truth information.
       untracked string tagProbeType = "Muon"

       // Store some generic information about the event
       // in case we want it
       untracked vint32 mcParticles = {23,13,22}
       untracked vint32 mcParents   = {0,0,0}
       
       // Tag & Probe Muon Candidate Collections
       untracked VInputTag tagCandTags = {tagCands}
       untracked VInputTag passProbeCandTags = {tkStaMatched}
       untracked VInputTag allProbeCandTags = {probeCands}

       // Truth Map Tags
       untracked VInputTag tagTruthMatchMapTags = {tagMuonMatch}
       untracked VInputTag passProbeTruthMatchMapTags = {passProbeMuonMatch}
       untracked VInputTag allProbeTruthMatchMapTags = {allProbeMuonMatch}

       // Tag & Probe Muon Association Map ... can have many, for
       // as many kinds of probe/pass-probe combination as desired.
       // (Then the above muon and cand arrays should be filled appropriately)
       untracked VInputTag tagProbeMapTags = { muonTagProbeMap }

       // Trigger & Trigger Matching tags
       untracked InputTag triggerEventTag = hltTriggerSummaryRAW
       untracked InputTag hltL1Tag = hltSingleMuIsoLevel1Seed
       untracked InputTag hltTag = hltSingleMuIsoL3IsoFiltered
       untracked double triggerDelRMatch = 0.15
       untracked double triggerDelPtRelMatch = 0.15

   }


    include "MuonAnalysis/TagAndProbe/data/tag_probe_generic.cfi"
    
    path p1 = { muon_cands & TPEdm }

    module outpath = PoolOutputModule
    {
       untracked string fileName = "output/generic_tp_edm_ntuple_cmssw205_1.root"

       untracked vstring outputCommands = {
	  "drop *",
	  "keep *_TPEdm_*_*" 
       }
    }
    
    endpath the_end = { outpath }
    
}
