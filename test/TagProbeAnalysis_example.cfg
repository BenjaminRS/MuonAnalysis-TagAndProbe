process Demo =  {
  
   // keep the logging output to a nice level
   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.destinations = {cout,cerr}

   source = EmptySource{}

   untracked PSet maxEvents = {untracked int32 input = 1}

   module demo = TagProbeAnalysis { 
    // Enter the input files here .. you can have any number of files with any normalization.
    // If you have already combined signal and background with the right normalizations (or have data!!)
    // just enter one filename. If you want to normalize signal and background samples differently,
    // enter the file-set for each sample with the appropriate cross-section and desired
    // integrated luminosity. In this example we enter signal files and background files, 
    // and normalize the signal to the 2.18pb^-1 of background.
//    untracked vstring inputFileNames = {
//      "output/ZmumuSignalOut/zmumu_reco_muon_eff_*.root",
//      "output/FilteredQCDOut/mu_pair_tagprobe_reco_30_120_*.root"
//    }
    // Enter a weight for each file name in the form of lumi*cross-section
    // if the files are desired to be unweighted enter -1.0 as the value.
//    untracked vdouble Luminosity      = {2.18,-1.0}
//    untracked vdouble CrossSection    = {829.5,-1.0}

    untracked vstring inputFileNames = {
//      "output/ZmumuSignalOut/zmumu_reco_muon_eff_*.root"
      "output/generic_tp_edm_ntuple_cmssw205_1.root"
    }
    // Enter a weight for each file name in the form of lumi*cross-section
    // if the files are desired to be unweighted enter -1.0 as the value.
    //untracked vdouble Luminosity      = {2.18}
    //untracked vdouble CrossSection    = {829.5}

    // Make some plots of tree variables ...
    untracked vstring quantities      = {"TPmass","TPmass"}
    untracked vstring conditions      = {"1","TPppass==1"}   
    untracked vstring outputFileNames = {"Zmass.gif","Zmass_pass.gif"}

    // Binning for the plots ...
    untracked vuint32 XBins           = {100,100}
    untracked vdouble XMin            = {50.0,50.0}
    untracked vdouble XMax            = {120.0,120.0}
    untracked vuint32 logY            = {1,1}
    
    // Efficiency/Fitting variables
    untracked bool CalculateEffSideBand = true // Calculate and store effs using SB
    untracked bool CalculateEffFitter   = true // Calculate and store effs from Roofit
    untracked bool CalculateEffTruth    = true // Calculate and store true effs

    // Root file to eff histograms to
    untracked string FitFileName        = "muon_eff_test.root"

    // Variable Specifications for SB subtractions and Roofit

    // Choose binned or unbinned fitter ...
    // Note that the unbinned fit will not fit weighted data,
    // if you wish to use weights, use the binned fit.
    untracked bool UnbinnedFit          = false

    // Mass window for fitting
    untracked int32 NumBinsMass         = 50
    untracked double MassLow            = 50.0
    untracked double MassHigh           = 120.0

    // Eta and Pt binning for the eff hists
    untracked int32 NumBinsPt           = 1
    untracked double PtLow              = 0.0
    untracked double PtHigh             = 100.0

    untracked int32 NumBinsEta          = 1
    untracked double EtaLow             = -2.5
    untracked double EtaHigh            =  2.5

    // Fitter variables - for the Roofit fitter
    // If you want the variable to float in the fit fill
    // three array elements {default, range_low, range_high}
    // If the variable should be fixed, fill one element {value}
    // Signal variables
    untracked vdouble SignalMean        = {91.1876,90.0,92.0}
    untracked vdouble SignalWidth       = {2.8,1.0,4.0}
    untracked vdouble SignalSigma       = {1.1,0.5,4.0}
    untracked vdouble SignalWidthL      = {3.0,0.0,20.0}
    untracked vdouble SignalWidthR      = {0.52,0.0,10.0}

    untracked vdouble BifurGaussFrac    = {0.87}

    // Background variables
    untracked vdouble BkgAlpha           = {62.0,50,70}
    untracked vdouble BkgBeta            = {0.001,0.0,0.1}
    untracked vdouble BkgPeak            = {91.1876}
    untracked vdouble BkgGamma           = {0.05,0.0,0.1}

    // Efficiency variables
    untracked vdouble Efficiency        = {0.98,0.0,1.0}    
    untracked vdouble NumSignal         = {4000.0,-10.0,100000.0}    
    untracked vdouble NumBkgPass        = {1000.0,-10.0,10000.0}    
    untracked vdouble NumBkgFail        = {10.0,-10.0,10000.0}    

    // Variables for sideband subtraction
    untracked double SBSPeak            = 91.1876   // Mass peak
    untracked double SBSStanDev         = 2         // SD from peak for subtraction

}

path p = {demo} 

}
