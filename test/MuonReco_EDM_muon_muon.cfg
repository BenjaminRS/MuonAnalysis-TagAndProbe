process MuonEff = {

    source = PoolSource 
    { 
      untracked vstring fileNames = {
      } 
    }
    replace PoolSource.fileNames = {
    '/store/mc/CSA08/Zmumu/GEN-SIM-RECO/1PB_V2_RECO_v1/0028/10375028-DD24-DD11-8170-001617E30F4C.root',
    '/store/mc/CSA08/Zmumu/GEN-SIM-RECO/1PB_V2_RECO_v1/0028/12CA1A34-DB24-DD11-AA5F-001D09F2426D.root',
    '/store/mc/CSA08/Zmumu/GEN-SIM-RECO/1PB_V2_RECO_v1/0028/F037A61F-DC24-DD11-B3F4-000423D98844.root', 
    '/store/mc/CSA08/Zmumu/GEN-SIM-RECO/1PB_V2_RECO_v1/0029/3001CA6B-E024-DD11-830E-001D09F292D1.root',    
    '/store/mc/CSA08/Zmumu/GEN-SIM-RECO/1PB_V2_RECO_v1/0029/D06BC70D-E124-DD11-BB0A-001D09F25041.root',
    '/store/mc/CSA08/Zmumu/GEN-SIM-RECO/1PB_V2_RECO_v1/0029/D6B9828D-DE24-DD11-AE72-001D09F2432B.root'     
    }  
    
    untracked PSet maxEvents = {untracked int32 input = -1 }
    
    // keep the logging output to a nice level
    service = MessageLogger {
	untracked vstring destinations   = { "cout","cerr" }
    }
        
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

    module TPEdm = TagProbeEDMNtuple
    {
       // Type of tag-probe candidates, use "Muon" or "Electron"
       // For the moment this only affects the kind of particle
       // used for storing MC truth information.
       untracked string tagProbeType = "Muon"

       // Store some generic information about the event
       // in case we want it
       untracked vint32 mcParticles = {23,13,22}
       untracked vint32 mcParents   = {0,0,0}
       
       // Tag & Probe Muon Candidate Collections
       untracked VInputTag tagCandTags = {
	    glbCands,
	    glbCands,
	    glbCands,
	    glbCands
	}
       untracked VInputTag passProbeCandTags = {
	    tkStaMatched,
	    staTkMatched,
	    glbWithStaTkMatched,
	    glbWithTkMatched
	}
	untracked VInputTag allProbeCandTags = {
	    generalCands,
	    staCands,
	    staTkMatched,
	    generalCands
	}
	
       // Truth Map Tags
	untracked VInputTag tagTruthMatchMapTags = {
	    glbMCMatch,
	    glbMCMatch,
	    glbMCMatch,
	    glbMCMatch
	}
	untracked VInputTag passProbeTruthMatchMapTags = {
	    tkStaMCMatch,
	    staTkMCMatch,
	    glbWithStaMCMatch,
	    glbWithTkMCMatch
	}
	untracked VInputTag allProbeTruthMatchMapTags = {
	    generalMCMatch,
	    staMCMatch,
	    staTkMCMatch,
	    generalMCMatch
	}
	
       // Tag & Probe Muon Association Map ... can have many, for
       // as many kinds of probe/pass-probe combination as desired.
       // (Then the above muon and cand arrays should be filled appropriately)
	untracked VInputTag tagProbeMapTags = { 
	    tagGlbprobeTkMap,
	    tagGlbprobeStaMap,
	    tagGlbprobeGlbStaMap,
	    tagGlbprobeGlbTkMap
	}
	
       // Trigger & Trigger Matching tags
       untracked InputTag triggerEventTag = hltTriggerSummaryRAW
       untracked InputTag hltL1Tag = hltSingleMuIsoLevel1Seed
       untracked InputTag hltTag = hltSingleMuIsoL3IsoFiltered
       untracked double triggerDelRMatch = 0.15
       untracked double triggerDelPtRelMatch = 0.15

   }


    include "MuonAnalysis/TagAndProbe/data/tag_probe_muon_muon.cfi"
    
    path p1 = { muon_cands , TPEdm }
    
    module outpath = PoolOutputModule
    {
	untracked string fileName = "output/muon_muon_EDM.root"
	
	untracked vstring outputCommands = {
	    "drop *",
	    "keep *_TPEdm_*_*" 
	}
    }
    
    endpath the_end = { outpath }
    
}
